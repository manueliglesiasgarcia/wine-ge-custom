on:
  workflow_dispatch:
  push:
    branches: [ master,patch-1 ]

jobs:
  build-wine-ge:
    runs-on: ubuntu-18.04
    steps:

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.1
    
      - name: Clone repo
        run: git clone -b ${{ steps.branch-name.outputs.current_branch }} --recurse-submodules ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} .

      - name: Get Proton Versions
        run: echo "RELEASE_VERSION=$(cat VERSION | cut -d ' ' -f 3 | cut -d '-' -f 1)" >> $GITHUB_ENV
        
      - name: Display version
        run: echo ${{ env.RELEASE_VERSION }}

      - name: Install dependencies
        working-directory: ./buildbot
        run: |
          sudo apt-get install -y lxd lxd-client sshpass
          sudo adduser $USER lxd
          newgrp lxd
          id
          
      - name: Setup lxc containers
        run: |
          cat buildbot/preseed | sudo lxd init --preseed
          sudo lxc launch images:ubuntu/bionic/i386 buildbot-bionic-i386
          sudo lxc launch images:ubuntu/bionic/amd64 buildbot-bionic-amd64
      
      - name: Add and execute 0-buildbot-usersetup.sh
        run: |
          sudo lxc exec buildbot-bionic-amd64 -- bash -c "echo -e 'ubuntu\nubuntu' | passwd ubuntu && echo 'ubuntu ALL=NOPASSWD: ALL' | EDITOR='tee -a' visudo"
          sudo lxc exec buildbot-bionic-i386 -- bash -c "echo -e 'ubuntu\nubuntu' | passwd ubuntu && echo 'ubuntu ALL=NOPASSWD: ALL' | EDITOR='tee -a' visudo"
  
      - name: Execute 1-setup-container-networking.sh
        run: |
          sleep 10
          mkdir ~/.ssh/
          touch ~/.ssh/config
          sudo ./1-setup-container-networking.sh buildbot-bionic-i386 buildbot-bionic-amd64
          cat ~/.ssh/config

      - name: Execute setup-container.sh
        working-directory: ./buildbot
        run: |
          ./setup-container.sh buildbot-bionic-i386
          ./setup-container.sh buildbot-bionic-amd64

      - name: Execute ssh-copy-id for buildbot32 and buildbot64
        run: |
          ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1
          sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot-bionic-i386
          sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot-bionic-amd64

      - name: Push Wine,Staging and patches files
        run: |
          ssh ubuntu@buildbot-bionic-i386 "rm -r ~/buildbot/runners/wine/patches/"
          ssh ubuntu@buildbot-bionic-amd64 "rm -r ~/buildbot/runners/wine/patches/"
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine && git clone -b wine-${{ env.RELEASE_VERSION }} https://github.com/wine-mirror/wine/"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && git clone -b wine-${{ env.RELEASE_VERSION }} https://github.com/wine-mirror/wine/"
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine && git clone -b ${{ env.RELEASE_VERSION }} https://github.com/wine-staging/wine-staging"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && git clone -b ${{ env.RELEASE_VERSION }} https://github.com/wine-staging/wine-staging"
          scp -r patches ubuntu@buildbot-bionic-i386:~/buildbot/runners/wine/
          scp -r patches ubuntu@buildbot-bionic-amd64:~/buildbot/runners/wine/
          scp build.sh ubuntu@buildbot-bionic-i386:~/buildbot/runners/wine/
          scp build.sh ubuntu@buildbot-bionic-amd64:~/buildbot/runners/wine/

      - name: Execute buildbot32-sshsetup
        run: |
          
          ssh ubuntu@buildbot-bionic-i386 'ls ~/.ssh'
          ssh ubuntu@buildbot-bionic-i386 'sudo chown -R ubuntu:ubuntu ~/.ssh/config'
          ssh ubuntu@buildbot-bionic-i386 "ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1"
          ssh ubuntu@buildbot-bionic-i386 'sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot64'
          
      - name: Execute buildbot64-sshsetup
        run: |
          ssh ubuntu@buildbot-bionic-amd64 'ls ~/.ssh'
          ssh ubuntu@buildbot-bionic-amd64 'sudo chown -R ubuntu:ubuntu ~/.ssh/config'
          ssh ubuntu@buildbot-bionic-amd64 "ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1"
          ssh ubuntu@buildbot-bionic-amd64 'sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot32'

      - name: Apply patches
        run: |
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine/ && bash patches/protonprep.sh"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine/ && bash patches/protonprep.sh"

      - name: Build Wine GE
        run: |
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine && mv wine wine-src"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && mv wine wine-src"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && ./build.sh --as lutris --version ${{ env.RELEASE_VERSION }} --with https://github.com/wine-mirror/wine/ --staging --branch ${{ env.RELEASE_VERSION }} --usemingw --noupload --keep --dependencies"
  
      - name: Move Archive
        run: |
          ssh ubuntu@buildbot-bionic-amd64 "mv buildbot/runners/wine/wine-*.tar.xz ~/"
          scp ubuntu@buildbot-bionic-amd64:~/wine-*.tar.xz ~/
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PROTON_GE_GITHUB_ACTIONS_BUILD }}
          file: wine-lutris-${{ env.RELEASE_VERSION }}-x86_64.tar.xz
          file_glob: true
          tag: "{{ env.RELEASE_VERSION }}-build-${{ github.run_number }}"
          overwrite: false

  build-wine-ge-lol:
    runs-on: ubuntu-18.04
    steps:

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.1
    
      - name: Clone repo
        run: git clone -b ${{ steps.branch-name.outputs.current_branch }} --recurse-submodules ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} .

      - name: Get Proton Versions
        run: echo "RELEASE_VERSION=$(cat VERSION | cut -d ' ' -f 3 | cut -d '-' -f 1)" >> $GITHUB_ENV
        
      - name: Display version
        run: echo ${{ env.RELEASE_VERSION }}

      - name: Install dependencies
        working-directory: ./buildbot
        run: |
          sudo apt-get install -y lxd lxd-client sshpass
          sudo adduser $USER lxd
          newgrp lxd
          id
          
      - name: Setup lxc containers
        run: |
          cat buildbot/preseed | sudo lxd init --preseed
          sudo lxc launch images:ubuntu/bionic/i386 buildbot-bionic-i386
          sudo lxc launch images:ubuntu/bionic/amd64 buildbot-bionic-amd64
      
      - name: Add and execute 0-buildbot-usersetup.sh
        run: |
          sudo lxc exec buildbot-bionic-amd64 -- bash -c "echo -e 'ubuntu\nubuntu' | passwd ubuntu && echo 'ubuntu ALL=NOPASSWD: ALL' | EDITOR='tee -a' visudo"
          sudo lxc exec buildbot-bionic-i386 -- bash -c "echo -e 'ubuntu\nubuntu' | passwd ubuntu && echo 'ubuntu ALL=NOPASSWD: ALL' | EDITOR='tee -a' visudo"
  
      - name: Execute 1-setup-container-networking.sh
        run: |
          sleep 10
          mkdir ~/.ssh/
          touch ~/.ssh/config
          sudo ./1-setup-container-networking.sh buildbot-bionic-i386 buildbot-bionic-amd64
          cat ~/.ssh/config

      - name: Execute setup-container.sh
        working-directory: ./buildbot
        run: |
          ./setup-container.sh buildbot-bionic-i386
          ./setup-container.sh buildbot-bionic-amd64

      - name: Execute ssh-copy-id for buildbot32 and buildbot64
        run: |
          ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1
          sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot-bionic-i386
          sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot-bionic-amd64

      - name: Push Wine,Staging and patches files
        run: |
          ssh ubuntu@buildbot-bionic-i386 "rm -r ~/buildbot/runners/wine/patches/"
          ssh ubuntu@buildbot-bionic-amd64 "rm -r ~/buildbot/runners/wine/patches/"
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine && git clone -b wine-${{ env.RELEASE_VERSION }} https://github.com/wine-mirror/wine/"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && git clone -b wine-${{ env.RELEASE_VERSION }} https://github.com/wine-mirror/wine/"
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine && git clone -b ${{ env.RELEASE_VERSION }} https://github.com/wine-staging/wine-staging"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && git clone -b ${{ env.RELEASE_VERSION }} https://github.com/wine-staging/wine-staging"
          scp -r patches ubuntu@buildbot-bionic-i386:~/buildbot/runners/wine/
          scp -r patches ubuntu@buildbot-bionic-amd64:~/buildbot/runners/wine/
          scp build.sh ubuntu@buildbot-bionic-i386:~/buildbot/runners/wine/
          scp build.sh ubuntu@buildbot-bionic-amd64:~/buildbot/runners/wine/

      - name: Execute buildbot32-sshsetup
        run: |
          
          ssh ubuntu@buildbot-bionic-i386 'ls ~/.ssh'
          ssh ubuntu@buildbot-bionic-i386 'sudo chown -R ubuntu:ubuntu ~/.ssh/config'
          ssh ubuntu@buildbot-bionic-i386 "ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1"
          ssh ubuntu@buildbot-bionic-i386 'sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot64'
          
      - name: Execute buildbot64-sshsetup
        run: |
          ssh ubuntu@buildbot-bionic-amd64 'ls ~/.ssh'
          ssh ubuntu@buildbot-bionic-amd64 'sudo chown -R ubuntu:ubuntu ~/.ssh/config'
          ssh ubuntu@buildbot-bionic-amd64 "ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1"
          ssh ubuntu@buildbot-bionic-amd64 'sshpass -p "ubuntu" ssh-copy-id -o StrictHostKeyChecking=no ubuntu@buildbot32'

      - name: Apply patches
        run: |
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine/ && bash patches/protonprep-LoL.sh"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine/ && bash patches/protonprep-LoL.sh"

      - name: Build Wine GE
        run: |
          ssh ubuntu@buildbot-bionic-i386 "cd buildbot/runners/wine && mv wine wine-src"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && mv wine wine-src"
          ssh ubuntu@buildbot-bionic-amd64 "cd buildbot/runners/wine && ./build.sh --as lutris --version ${{ env.RELEASE_VERSION }} --with https://github.com/wine-mirror/wine/ --staging --branch ${{ env.RELEASE_VERSION }} --usemingw --noupload --keep --dependencies"
  
      - name: Move Archive
        run: |
          ssh ubuntu@buildbot-bionic-amd64 "mv buildbot/runners/wine/wine-*.tar.xz ~/"
          scp ubuntu@buildbot-bionic-amd64:~/wine-*.tar.xz ~/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PROTON_GE_GITHUB_ACTIONS_BUILD }}
          file: wine-lutris-${{ env.RELEASE_VERSION }}-x86_64.tar.xz
          file_glob: true
          tag: "{{ env.RELEASE_VERSION }}-lol-build-${{ github.run_number }}"
          overwrite: false